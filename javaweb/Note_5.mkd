# B5: Thiết kế Database với mysql

## Các mối quan hệ

One to one, one to many, many to many
Ví dụ: Một cuốn sách có nhiều tác giả, một tác giả có thể viết nhiều cuốn sách.
Book n-n author
Khi thiết kế many to many thì ở giữa sẽ có thêm một bảng trung gian. Ví dụ trên sẽ có bảng author_book trung gian và mối quan hệ sẽ trở thành

Book 1-n (author_book) n-1 author.

## Mysql

### Terminal command

```shell
sudo systemctl (status/start/stop) mysql
```

### Mysql Workbench

- Chuột phải --> Create Schema, Đặt tên, nhớ sử dụng Charset UTF-8 để lưu được tiếng việt.
- Chọn Create new sql tab for executing query
  
```sql
use newservlet12month2018
-- Tạo bảng role có quan hệ 1 nhiều với user
CREATE TABLE role(
    -- Trong table luôn phải có khóa chính, bigint trong sql thì trong java là Long
    id bigint NOT NULL PRIMARY KEY auto_increment,
    -- Tên của vai trò, người dùng và quản trị
    name VARCHAR(255) NOT NULL,
    -- Code có kiểu String để dễ làm việc hơn, vd: Quản trị --> code: ADMIN, người dùng --> code: USER
    code VARCHAR(255) NOT NULL,

    createddate TIMESTAMP NULL,
    modifieddate TIMESTAMP NULL,
    createdby VARCHAR(255) NULL,
    modifiedby VARCHAR(255) NULL

);

-- Tạo bảng user
CREATE TABLE user (
    id bigint NOT NULL PRIMARY KEY auto_increment,
    username VARCHAR(150) NOT NULL,
    password VARCHAR(150) NOT NULL,
    fullname VARCHAR(150) NULL,
    -- Khi xóa thì không xóa hẳn mà chỉ để trạng thái, khi status=1 là vẫn còn trong cty, status=0 là không còn trong cty
    status int NOT NULL,
    -- Khóa ngoại
    roleid bigint NOT NULL,
    createddate TIMESTAMP NULL,
    modifieddate TIMESTAMP NULL,
    createdby VARCHAR(255) NULL,
    modifiedby VARCHAR(255) NULL

);
-- Map khóa chính ở role với khóa ngoại ở user
ALTER TABLE user ADD CONSTRAINT fk_user_role FOREIGN KEY (roleid) REFERENCES role(id);

-- Tạo bảng bài viết
CREATE TABLE news (
    id bigint NOT NULL PRIMARY KEY auto_increment,
    title VARCHAR(255) NULL,
    thumbnail VARCHAR(255) NULL,
    shortdescription TEXT NULL,
    content TEXT NULL,
    categoryid bigint NOT NULL,
    

    createddate TIMESTAMP NULL,
    modifieddate TIMESTAMP NULL,
    createdby VARCHAR(255) NULL,
    modifiedby VARCHAR(255) NULL

);

-- Tạo bảng category
CREATE TABLE category(

    id bigint NOT NULL PRIMARY KEY auto_increment,
    name VARCHAR(255) NOT NULL,
    code VARCHAR(255) NOT NULL,

    createddate TIMESTAMP NULL,
    modifieddate TIMESTAMP NULL,
    createdby VARCHAR(255) NULL,
    modifiedby VARCHAR(255) NULL

);

ALTER TABLE news ADD CONSTRAINT fk_news_category FOREIGN KEY (categoryid) REFERENCES category(id);


-- Tạo bảng comment
CREATE TABLE comment(

    id bigint NOT NULL PRIMARY KEY auto_increment,
    content TEXT NOT NULL,
    user_id bigint NOT NULL,
    news_id bigint NOT NULL,


    createddate TIMESTAMP NULL,
    modifieddate TIMESTAMP NULL,
    createdby VARCHAR(255) NULL,
    modifiedby VARCHAR(255) NULL

);

ALTER TABLE comment ADD CONSTRAINT fk_comment_user FOREIGN KEY (userid) REFERENCES user(id);
ALTER TABLE comment ADD CONSTRAINT fk_comment_news FOREIGN KEY (newsid) REFERENCES news(id);
```

## Với bài toán

- Cần các bảng role, admin, user
- Mối quan hệ role 1-n user
- Mối quan hệ user n-n news (Chú ý khi implement thêm bảng user_news Nhưng ta sẽ gọi bảng user_news là bảng comment). user 1-n comment, news 1-n comment
- createddate, modifieddate, createdby và modifiedby là 4 trường sẽ giúp rất nhiều cho việc thống kê. Ví dụ muốn thống kê bài viết của một người nào đó thì chỉ cần lọc thuộc tính createdby.
- Note: Khái niệm về Java Beans là class Java có chứa getter và setter.